{"version":3,"file":"static/js/630.d12f783b.chunk.js","mappings":"8UAaaA,GACX,UAAC,IAAD,CAAKC,QAAQ,OAAOC,cAAc,SAASC,WAAW,SAAtD,WACE,gBAAKC,IAAKC,EAASC,MAAM,OAAOC,OAAO,OAAOC,IAAI,MAClD,SAAC,IAAD,CAAYC,QAAQ,QAAQC,WAAW,MAAMC,GAAI,EAAGC,GAAI,EAAxD,kKAiGJ,UA3Fa,SAAC,GAAuB,IAAD,MAApBC,EAAoB,EAApBA,EAAGC,EAAiB,EAAjBA,WACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAQC,EAAAA,EAAAA,KACRC,GAAKC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,KAAK,QAE1CC,GAAeC,EAAAA,EAAAA,QAAO,MAE5B,GAAkCC,EAAAA,EAAAA,KAAY,qBAAGC,OAAH,IAAtCA,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aACTC,GAAYH,EAAAA,EAAAA,KAAY,qBAAGG,OAAH,IAAxBA,QAOR,OALAC,EAAAA,EAAAA,YAAU,WACRd,GAASe,EAAAA,EAAAA,OACTC,SAASC,MAAT,0LACD,GAAE,KAGD,gCACGb,IAAM,SAAC,IAAD,CAAYc,MAAI,EAACtB,EAAGA,KAC3B,UAAC,IAAD,CACEuB,UAAU,UACVC,GAAI,CAAEC,UAAW,QACjBC,gBAAgB,UAHlB,WAKU,OAAPT,QAAO,IAAPA,GAAA,UAAAA,EAASU,eAAT,eAAkBC,YACjB,SAAC,IAAD,CAAWC,SAAS,KAApB,UACE,SAAC,IAAD,CACEjC,QAAQ,YACRkC,QAAS,kBAAM5B,EAAS,yBAAf,EACTsB,GAAI,CACFpC,QAAS,QACT2C,EAAG,SACHL,gBAAiB,gBACjBM,UAAU,uTAEZC,KAAK,SATP,iJAgBH,OAAClB,QAAD,IAACA,GAAAA,EAASmB,OAUT,iCACE,SAAC,IAAD,CACEV,GAAI,CACFW,SAAU,WACVC,OAAQ,cACR3C,MAAO,OAJX,UAOE,SAAC,IAAD,CAAQsB,QAASA,OAEnB,SAAC,IAAD,CAAWc,SAAS,KAApB,UACE,SAAC,KAAD,CAAMQ,WAAS,EAACC,QAAS,EAAGxC,GAAI,EAAhC,gBACGiB,QADH,IACGA,GADH,UACGA,EAASwB,QACPC,MACC,SAACC,EAAOC,GAAR,OACE,IAAIC,KAAKF,EAAMG,YAAc,IAAID,KAAKD,EAAME,WAD9C,WAHN,iBACG,EAKGC,QAAO,SAACC,GAAD,MAA0B,iBAAhBA,EAAKC,MAAf,WANb,aACG,EAMGC,KAAI,SAACF,GAAD,OACJ,SAAC,KAAD,CAAMA,MAAI,EAACG,GAAI,GAAIzC,GAAI,EAAvB,UACE,SAAC,IAAD,CAAMsC,KAAMA,EAAM7C,WAAYA,EAAYiD,UAAQ,KADrBJ,EAAKK,GADhC,YA3Bd,SAAC,IAAD,CACErD,GAAI,EACJsD,UAAU,QACVC,KAAI,OAACtC,QAAD,IAACA,GAAAA,EAASmB,OACdG,UAAWzB,EAAa0C,QAJ1B,SAMGnE,QA+BP,SAAC,IAAD,CACEoE,MAAOvC,EACPwC,SAAU,IACVC,SAAUC,EAAAA,GACVC,IAAI,iDAIX,C","sources":["pages/Live/index.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { Button, Container, Grid, Slide, Typography, useMediaQuery } from \"@mui/material\";\nimport Card from \"./Card\";\nimport { Box, useTheme } from \"@mui/system\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getStreams } from \"../../redux/reducers/streams.js\";\nimport Slides from \"./Slides\";\nimport { useNavigate } from \"react-router\";\nimport Categories from \"../Main/Categories\";\nimport SnackBar from \"../../components/SnackBar\";\nimport { setNewNotification } from \"../../redux/reducers/streams\";\nimport noneRes from \"../../assets/images/none-res.png\";\n\nexport const noneResults = (\n  <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n    <img src={noneRes} width=\"auto\" height=\"auto\" alt=\"\" />\n    <Typography variant=\"body1\" fontWeight=\"700\" mt={2} mb={2}>\n      К сожалению эфиров пока нет :)\n    </Typography>\n  </Box>\n);\n\nconst Live = ({ t, setLoading }) => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const theme = useTheme();\n  const md = useMediaQuery(theme.breakpoints.down(\"768\"));\n\n  const containerRef = useRef(null);\n\n  const { streams, notification } = useSelector(({ streams }) => streams);\n  const { profile } = useSelector(({ profile }) => profile);\n\n  useEffect(() => {\n    dispatch(getStreams());\n    document.title = `Прямые эфиры на Электроника сервис`;\n  }, []);\n\n  return (\n    <>\n      {md && <Categories live t={t} />}\n      <Box\n        component=\"section\"\n        sx={{ minHeight: \"70vh\" }}\n        backgroundColor=\"#FBFBFB\"\n      >\n        {profile?.user_id?.is_staff && (\n          <Container maxWidth=\"xl\">\n            <Button\n              variant=\"contained\"\n              onClick={() => navigate(\"/dashboard/live/create\")}\n              sx={{\n                display: \"table\",\n                m: \"0 auto\",\n                backgroundColor: \"var(--purple)\",\n                boxShadow: `0px 150px 80px rgba(143, 39, 198, 0.18), 0px 62.6664px 33.4221px rgba(143, 39, 198, 0.129394), 0px 33.5045px 17.869px rgba(143, 39, 198, 0.107299), 0px 18.7823px 10.0172px rgba(143, 39, 198, 0.09), 0px 9.97515px 5.32008px rgba(143, 39, 198, 0.0727007), 0px 4.15088px 2.21381px rgba(143, 39, 198, 0.0506062);`,\n              }}\n              size=\"medium\"\n            >\n              СОЗДАТЬ СВОЙ ПРЯМОЙ ЭФИР\n            </Button>\n          </Container>\n        )}\n\n        {!streams?.count ? (\n          <Slide\n            mt={4}\n            direction=\"right\"\n            in={!streams?.count}\n            container={containerRef.current}\n          >\n            {noneResults}\n          </Slide>\n        ) : (\n          <>\n            <Box\n              sx={{\n                position: \"relative\",\n                margin: \"54px auto 0\",\n                width: \"60%\",\n              }}\n            >\n              <Slides streams={streams} />\n            </Box>\n            <Container maxWidth=\"xl\">\n              <Grid container spacing={2} mt={8}>\n                {streams?.results\n                  .sort(\n                    (date1, date2) =>\n                      new Date(date1.start_date) - new Date(date2.start_date)\n                  )\n                  ?.filter((item) => item.status === \"ANNOUNCEMENT\")\n                  ?.map((item) => (\n                    <Grid item xs={12} md={6} key={item.id}>\n                      <Card item={item} setLoading={setLoading} announce />\n                    </Grid>\n                  ))}\n              </Grid>\n            </Container>\n          </>\n        )}\n      </Box>\n      <SnackBar\n        state={notification}\n        severity={201}\n        setState={setNewNotification}\n        txt=\"Успешно\"\n      />\n    </>\n  );\n};\n\nexport default Live;\n"],"names":["noneResults","display","flexDirection","alignItems","src","noneRes","width","height","alt","variant","fontWeight","mt","mb","t","setLoading","navigate","useNavigate","dispatch","useDispatch","theme","useTheme","md","useMediaQuery","breakpoints","down","containerRef","useRef","useSelector","streams","notification","profile","useEffect","getStreams","document","title","live","component","sx","minHeight","backgroundColor","user_id","is_staff","maxWidth","onClick","m","boxShadow","size","count","position","margin","container","spacing","results","sort","date1","date2","Date","start_date","filter","item","status","map","xs","announce","id","direction","in","current","state","severity","setState","setNewNotification","txt"],"sourceRoot":""}