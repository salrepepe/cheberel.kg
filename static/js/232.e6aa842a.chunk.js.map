{"version":3,"file":"static/js/232.e6aa842a.chunk.js","mappings":"4PAwMA,UAnLiB,SAAC,GAAuD,IAAD,EAApDA,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,EAAoBC,GAAiB,EAAlCC,gBAAkC,EAAjBD,YAC/CE,GAAWC,EAAAA,EAAAA,MAEjB,GAA0CC,EAAAA,EAAAA,KACxC,qBAAGC,OAAH,IADMA,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,qBAIXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,UAAW,IAEbC,SAAU,SAACC,GAETZ,GAAW,GACXE,GAASW,EAAAA,EAAAA,IAAcD,GACxB,KAGHE,EAAAA,EAAAA,YAAU,WAERP,EAAOQ,cAAc,YAArB,OAAkCV,QAAlC,IAAkCA,OAAlC,EAAkCA,EAASK,UAG5C,GAAE,CAACL,IAEJ,IAAMW,GAAcC,EAAAA,EAAAA,SAAO,GAiB3B,OAfAC,EAAAA,EAAAA,kBAAgB,WACVF,EAAYG,QACdH,EAAYG,SAAU,GAIxBnB,GAAW,GAE2B,MAAlCM,EAAqBc,WACvBtB,GAAQ,GACRI,GAASmB,EAAAA,EAAAA,QAGZ,GAAE,CAACf,KAGF,iCACE,SAAC,IAAD,CACEgB,MAAOhB,EACPiB,IAAI,4JACJC,SAAUC,EAAAA,MAEZ,UAAC,IAAD,CACEC,OAAO,QACPC,GAAI,CACF,mBAAoB,CAClBC,MAAO,CAAEC,GAAI,OAAQC,GAAI,OACzBC,EAAG,IAGPlC,KAAMA,EACNmC,QAAS,kBAAMlC,GAAQ,EAAd,EACTmC,OAAQ,kBAAMnC,GAAQ,EAAd,EAVV,WAYE,UAAC,IAAD,CAAKoC,QAAQ,OAAOC,GAAI,EAAGC,eAAe,gBAA1C,WACE,UAAC,IAAD,CAAYC,QAAQ,KAAKC,WAAW,MAApC,UACGvC,EAAE,YAAa,QAElB,SAAC,IAAD,CAAYwC,QAAS,kBAAMzC,GAAQ,EAAd,EAArB,UACE,SAAC,KAAD,UAGJ,UAAC,IAAD,CACE0C,UAAU,OACV7B,SAAUJ,EAAOkC,aACjBP,QAAQ,OACRQ,cAAc,SACdC,WAAW,gBACXP,eAAe,gBACfQ,OAAO,OAPT,WASE,UAAC,IAAD,CACEjB,GAAI,CACF,yBAA0B,CACxBkB,UAAW,iBACXC,aAAc,EAEd,qCAAsC,CACpCC,YAAa,aAPrB,WAYE,SAAC,IAAD,CACEC,SAAS,OACTb,GAAI,EACJc,cAAc,YACdC,MAAM,OAJR,iCAQA,SAAC,IAAD,CACEC,WAAS,EACTC,KAAK,YACLC,SAAU9C,EAAO+C,aACjBC,MAAOhD,EAAOK,OAAOF,UACrB8C,UAAQ,KAkBV,SAAC,IAAD,CACER,SAAS,OACTS,GAAI,EACJtB,GAAI,EACJc,cAAc,YACdC,MAAM,OALR,SAOGnD,EAAE,kBAEL,SAAC,IAAD,CACEwD,MAAK,OAAElD,QAAF,IAAEA,GAAF,UAAEA,EAASqD,eAAX,aAAE,EAAkBC,MACzBH,UAAQ,EACRL,WAAS,EACTS,UAAQ,KAeV,SAAC,IAAD,CACEZ,SAAS,OACTS,GAAI,EACJtB,GAAI,EACJc,cAAc,YACdC,MAAM,OALR,SAOGnD,EAAE,eAEL,SAAC,IAAD,CACE6D,UAAQ,EACRT,WAAS,EACTI,MAAM,wCAGV,SAAC,IAAD,CACEM,KAAK,SACLC,KAAK,SACLZ,MAAM,UACNC,WAAS,EACTd,QAAQ,YALV,SAOGtC,EAAE,kBAMd,C","sources":["pages/Dashboard/Profile/Settings/index.jsx"],"sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  Button,\n  IconButton,\n  InputAdornment,\n  SwipeableDrawer,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useFormik } from \"formik\";\nimport React, { useEffect, useLayoutEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CloseIcon } from \"../../../../assets/images/icons\";\nimport SnackBar from \"../../../../components/SnackBar\";\nimport {\n  getProfileData,\n  setUpdatedProfileData,\n  updateProfile,\n} from \"../../../../redux/reducers/profile\";\n\nconst Settings = ({ open, setOpen, t, setChangeNumber, setLoading }) => {\n  const dispatch = useDispatch();\n\n  const { profile, updated_profile_data } = useSelector(\n    ({ profile }) => profile\n  );\n\n  const formik = useFormik({\n    initialValues: {\n      full_name: \"\",\n    },\n    onSubmit: (values) => {\n      // show linear progress\n      setLoading(true);\n      dispatch(updateProfile(values));\n    },\n  });\n\n  useEffect(() => {\n    // formik.setFieldValue(\"phone_number\", profile?.phone_number);\n    formik.setFieldValue(\"full_name\", profile?.full_name);\n    // formik.setFieldValue(\"last_name\", profile?.last_name);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [profile]);\n\n  const firstUpdate = useRef(true);\n\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    // hide linear progress\n    setLoading(false);\n\n    if (updated_profile_data.severity === 200) {\n      setOpen(false);\n      dispatch(getProfileData());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [updated_profile_data]);\n\n  return (\n    <>\n      <SnackBar\n        state={updated_profile_data}\n        txt=\"Ваши данные успешно изменены\"\n        setState={setUpdatedProfileData}\n      />\n      <SwipeableDrawer\n        anchor=\"right\"\n        sx={{\n          \"& .MuiPaper-root\": {\n            width: { xs: \"100%\", lg: \"30%\" },\n            p: 2,\n          },\n        }}\n        open={open}\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n      >\n        <Box display=\"flex\" mb={3} justifyContent=\"space-between\">\n          <Typography variant=\"h6\" fontWeight=\"700\">\n            {t(\"settings\")}{\" \"}\n          </Typography>\n          <IconButton onClick={() => setOpen(false)}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n        <Box\n          component=\"form\"\n          onSubmit={formik.handleSubmit}\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"space-between\"\n          justifyContent=\"space-between\"\n          height=\"100%\"\n        >\n          <Box\n            sx={{\n              \"& .MuiFormControl-root\": {\n                boxShadow: \"none!important\",\n                borderRadius: 8,\n\n                \"& .MuiOutlinedInput-notchedOutline\": {\n                  borderColor: \"#CECECE\",\n                },\n              },\n            }}\n          >\n            <Typography\n              fontSize=\"12px\"\n              mb={1}\n              textTransform=\"uppercase\"\n              color=\"#000\"\n            >\n              ФИО\n            </Typography>\n            <TextField\n              fullWidth\n              name=\"full_name\"\n              onChange={formik.handleChange}\n              value={formik.values.full_name}\n              required\n            />\n            {/* <Typography\n              fontSize=\"12px\"\n              mt={3}\n              mb={1}\n              textTransform=\"uppercase\"\n              color=\"#000\"\n            >\n              {t(\"name\")}\n            </Typography>\n            <TextField\n              fullWidth\n              name=\"first_name\"\n              onChange={formik.handleChange}\n              value={formik.values.first_name}\n              required\n            /> */}\n            <Typography\n              fontSize=\"12px\"\n              mt={3}\n              mb={1}\n              textTransform=\"uppercase\"\n              color=\"#000\"\n            >\n              {t(\"phoneNumber\")}\n            </Typography>\n            <TextField\n              value={profile?.user_id?.phone}\n              required\n              fullWidth\n              disabled\n              // InputProps={{\n              //   endAdornment: (\n              //     <InputAdornment\n              //       position=\"end\"\n              //       onClick={() => {\n              //         setOpen(false);\n              //         setChangeNumber(true);\n              //       }}\n              //     >\n              //       <FontAwesomeIcon icon=\"pen\" color=\"var(--primary)\" />\n              //     </InputAdornment>\n              //   ),\n              // }}\n            />\n            <Typography\n              fontSize=\"12px\"\n              mt={3}\n              mb={1}\n              textTransform=\"uppercase\"\n              color=\"#000\"\n            >\n              {t(\"password\")}\n            </Typography>\n            <TextField\n              disabled\n              fullWidth\n              value=\"*******************************\"\n            />\n          </Box>\n          <Button\n            size=\"medium\"\n            type=\"submit\"\n            color=\"primary\"\n            fullWidth\n            variant=\"contained\"\n          >\n            {t(\"save\")}\n          </Button>\n        </Box>\n      </SwipeableDrawer>\n    </>\n  );\n};\n\nexport default Settings;\n"],"names":["open","setOpen","t","setLoading","setChangeNumber","dispatch","useDispatch","useSelector","profile","updated_profile_data","formik","useFormik","initialValues","full_name","onSubmit","values","updateProfile","useEffect","setFieldValue","firstUpdate","useRef","useLayoutEffect","current","severity","getProfileData","state","txt","setState","setUpdatedProfileData","anchor","sx","width","xs","lg","p","onClose","onOpen","display","mb","justifyContent","variant","fontWeight","onClick","component","handleSubmit","flexDirection","alignItems","height","boxShadow","borderRadius","borderColor","fontSize","textTransform","color","fullWidth","name","onChange","handleChange","value","required","mt","user_id","phone","disabled","size","type"],"sourceRoot":""}