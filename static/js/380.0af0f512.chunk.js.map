{"version":3,"file":"static/js/380.0af0f512.chunk.js","mappings":"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","sources":["components/Dialog.jsx","components/RadioBtn.jsx","pages/Dashboard/Cart/Order/Form.jsx","pages/Dashboard/Cart/Order/index.jsx"],"sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, Dialog, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport cookie from \"cookie_js\";\nimport { useNavigate } from \"react-router\";\nimport { t } from \"i18next\";\n\nconst Dialogs = ({\n  setOpen,\n  open,\n  title,\n  subtitle,\n  product,\n  handleRemoveProduct,\n  item,\n  exit,\n}) => {\n  const navigate = useNavigate();\n\n  return (\n    <Dialog\n      sx={{\n        \"& .MuiPaper-root\": {\n          p: 2,\n        },\n      }}\n      onClose={() => setOpen(false)}\n      open={open}\n    >\n      <FontAwesomeIcon icon=\"power-off\" fontSize={32} color=\"#E32967\" />\n\n      <Typography\n        variant=\"subtitle2\"\n        fontWeight=\"700\"\n        textAlign=\"center\"\n        mt={2}\n        mb={1}\n      >\n        {title}\n      </Typography>\n      <Typography variant=\"body1\" color=\"#15151570\" textAlign=\"center\">\n        {subtitle}\n      </Typography>\n\n      <Box\n        mt={2}\n        borderTop=\"1px solid #00000010\"\n        display=\"flex\"\n        pt={2}\n        justifyContent=\"space-between\"\n      >\n        <Button fullWidth color=\"success\" onClick={() => setOpen(false)}>\n          <Typography variant=\"body2\" color=\"#151515\">\n            {t(\"no\")}\n          </Typography>\n        </Button>\n        <Button\n          fullWidth\n          onClick={() => {\n            if (exit) {\n              localStorage.clear();\n              cookie.removeSpecific(\"token\", {\n                path: \"/\",\n              });\n              navigate(\"/\");\n              setTimeout(() => {\n                window.location.reload();\n              }, 200);\n            } else {\n              if (product) {\n                handleRemoveProduct(product?.id, product.sum);\n                setOpen(false);\n              }\n              // else {\n              //   setOpen(false);\n              //   handleRemoveProduct(item);\n              // }\n            }\n          }}\n        >\n          <Typography variant=\"body2\" color=\"#E32967\">\n            {t(\"yes\")}\n          </Typography>\n        </Button>\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default Dialogs;\n","import { Box } from \"@mui/system\";\nimport React from \"react\";\nimport { CheckMarkIcon, CheckMarkIconFill } from \"../assets/images/icons\";\n\nconst RadioBtn = ({ id, value, handleChange, name }) => {\n  return (\n    <Box\n      sx={{\n        \"& input\": {\n          position: \"absolute\",\n          top: \"35%\",\n          right: 16,\n          opacity: 0,\n        },\n      }}\n    >\n      <input\n        type=\"radio\"\n        required\n        name={name}\n        onChange={handleChange}\n        value={id}\n      />\n      {id == value ? <CheckMarkIconFill /> : <CheckMarkIcon />}\n    </Box>\n  );\n};\n\nexport default RadioBtn;\n","import React, { useRef } from \"react\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  Link,\n  List,\n  ListItem,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport {\n  ArrowDropDownIcon,\n  BicycleIcon,\n  // CardIcon,\n  CourierIcon,\n  PeopleIcon,\n} from \"../../../../assets/images/icons\";\nimport RadioBtn from \"../../../../components/RadioBtn\";\n// import o from \"../../../../assets/images/o.svg\";\n// import pay24 from \"../../../../assets/images/pay24.svg\";\n// import c from \"../../../../assets/images/c.svg\";\n// import visa from \"../../../../assets/images/visa.svg\";\n// import elkart from \"../../../../assets/images/elkart.svg\";\n// import megapay from \"../../../../assets/images/megapay.svg\";\n// import mbank from \"../../../../assets/images/mbank.svg\";\n// import optima from \"../../../../assets/images/optima.svg\";\nimport { Box } from \"@mui/system\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createOrder } from \"../../../../redux/reducers/order\";\nimport { useState } from \"react\";\nimport { useLayoutEffect } from \"react\";\nimport { getCartList } from \"../../../../redux/reducers/products\";\nimport { useNavigate } from \"react-router\";\n\nconst Form = ({ setSuccess, t, setLoading, buyNow, setCartSum }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [shippingMethod, setShippingMethod] = useState(false);\n\n  const { cart_list } = useSelector(({ products }) => products);\n  const { created_order } = useSelector(({ order }) => order);\n\n  const formik = useFormik({\n    initialValues: {\n      paymentMethod: \"\",\n      delivery_method: \"\",\n      country: \"\",\n      city: \"\",\n      address: \"\",\n      ordering_item: [],\n    },\n    onSubmit: (values) => {\n      if (buyNow?.from_stream) {\n        const data = {\n          country: values.country,\n          city: values.city,\n          address: values.address,\n          delivery_method: values.delivery_method,\n          ordering_item: [\n            {\n              product_variations: buyNow.variant,\n              product_count: buyNow.count,\n            },\n          ],\n          from_stream: buyNow.from_stream,\n        };\n        dispatch(createOrder(data));\n        setLoading(true);\n      } else if (buyNow && !buyNow.from_stream) {\n        const data = {\n          country: values.country,\n          city: values.city,\n          address: values.address,\n          delivery_method: values.delivery_method,\n          ordering_item: [\n            {\n              product_variations: buyNow.variant,\n              product_count: buyNow.count,\n            },\n          ],\n        };\n        dispatch(createOrder(data));\n        setLoading(true);\n      } else {\n        const data = {\n          country: values.country,\n          city: values.city,\n          address: values.address,\n          delivery_method: values.delivery_method,\n          ordering_item: cart_list.results\n            ?.filter((item) => !item.total_products_sum)\n            ?.map((item) => ({\n              product_variations: item?.product_variations?.id,\n              product_count: item?.product_count,\n            })),\n        };\n\n        dispatch(createOrder(data));\n        setLoading(true);\n      }\n    },\n  });\n\n  const firstUpdate = useRef(true);\n\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n\n    // hide linear progress\n    setLoading(false);\n\n    if (created_order.severity === 200) {\n      setSuccess(true);\n      localStorage.setItem(\"orderId\", created_order.message.order_id);\n      fetch(\"https://api.opop.asia/payments/result_url/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ pg_order_id: 1, b: \"Textual content\" }),\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          console.log(data);\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [created_order]);\n\n  const shippingMethods = [\n    {\n      id: \"COURIER\",\n      img: <CourierIcon />,\n      txt: \"Курьер\",\n      subtitle:\n        \"Оплата услуги курьера совершается в момент доставки товара. <br/> Стоимость услуг указаны <b>здесь</b>\",\n      link: true,\n    },\n    {\n      id: \"PICKUP\",\n      img: <PeopleIcon />,\n      txt: t(\"pickUp\"),\n      subtitle:\n        \"Аламединский р-н, Алма-Атинская 1/1,  график работы пн-пт, с 09:00-18:00\",\n      link: false,\n    },\n  ];\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        \"& .MuiFormControl-root\": {\n          boxShadow: \"none!important\",\n          borderRadius: 8,\n\n          \"& .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"#CECECE\",\n          },\n        },\n      }}\n      onSubmit={formik.handleSubmit}\n    >\n      <Typography fontSize=\"12px\" mb={1} textTransform=\"uppercase\" color=\"#000\">\n        {t(\"country\")}\n      </Typography>\n      <TextField\n        required\n        fullWidth\n        name=\"country\"\n        value={formik.values.country}\n        onChange={formik.handleChange}\n      />\n      <Typography\n        fontSize=\"12px\"\n        mb={1}\n        mt={2}\n        textTransform=\"uppercase\"\n        color=\"#000\"\n      >\n        {t(\"city\")}\n      </Typography>\n      <TextField\n        required\n        fullWidth\n        name=\"city\"\n        value={formik.values.city}\n        onChange={formik.handleChange}\n      />\n      <Typography\n        fontSize=\"12px\"\n        mb={1}\n        mt={2}\n        textTransform=\"uppercase\"\n        color=\"#000\"\n      >\n        {t(\"address\")}\n      </Typography>\n      <TextField\n        required\n        fullWidth\n        name=\"address\"\n        value={formik.values.address}\n        onChange={formik.handleChange}\n      />\n      {/* <Accordion>\n        <AccordionSummary expandIcon={<ArrowDropDownIcon />}>\n          <div className=\"d-flex\">\n            <CardIcon />\n            <Typography ml={2} variant=\"body2\" fontWeight=\"700\">\n              Способ оплаты:\n            </Typography>\n          </div>\n          <Typography mr={2} variant=\"body2\" fontWeight=\"400\">\n            Visa & Master Card\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <List>\n            {paymentMethods.map((item, idx) => (\n              <ListItem\n                component=\"label\"\n                button\n                key={idx}\n                sx={{\n                  background: \"#F1F1F1\",\n                  borderRadius: \"8px\",\n                  p: 2,\n                  mb: 2,\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <div className=\"d-flex\">\n                  <img src={item.img} alt=\"\" />\n                  <Typography variant=\"body2\" ml={2}>\n                    {item.txt}\n                  </Typography>\n                </div>\n                <RadioBtn\n                  name=\"paymentMethod\"\n                  id={item.id}\n                  handleChange={formik.handleChange}\n                  value={formik.values.paymentMethod}\n                />\n              </ListItem>\n            ))}\n          </List>\n        </AccordionDetails>\n      </Accordion> */}\n      <Accordion\n        expanded={shippingMethod}\n        onChange={() => setShippingMethod(!shippingMethod)}\n      >\n        <AccordionSummary expandIcon={<ArrowDropDownIcon />}>\n          <div className=\"d-flex\">\n            <BicycleIcon />\n            <Typography ml={2} variant=\"body2\" fontWeight=\"700\">\n              {t(\"shipping_method\")}:{\" \"}\n            </Typography>\n          </div>\n          <Typography mr={2} variant=\"body2\" fontWeight=\"400\">\n            {formik.values.shippingMethod}\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <List>\n            {shippingMethods.map((item, idx) => (\n              <ListItem\n                component=\"label\"\n                button\n                key={idx}\n                sx={{\n                  background: \"#F1F1F1\",\n                  borderRadius: \"8px\",\n                  p: 2,\n                  mb: 2,\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <div className=\"d-flex\">\n                  {item.img}\n                  <div>\n                    <Typography variant=\"body2\" ml={2}>\n                      {item.txt}\n                    </Typography>\n\n                    <Typography\n                      dangerouslySetInnerHTML={{\n                        __html: item.subtitle,\n                      }}\n                      mt={0.3}\n                      lineHeight=\"1.2\"\n                      onClick={() => (item.link ? navigate(\"/shipping\") : \"\")}\n                      sx={{\n                        \"& b\": {\n                          color: \"var(--primary)\",\n                        },\n                      }}\n                      variant=\"body2\"\n                      ml={2}\n                      color=\"#777\"\n                    />\n                  </div>\n                </div>\n                <RadioBtn\n                  name=\"delivery_method\"\n                  id={item.id}\n                  handleChange={formik.handleChange}\n                  value={formik.values.delivery_method}\n                />\n              </ListItem>\n            ))}\n          </List>\n        </AccordionDetails>\n      </Accordion>\n      <Button\n        size=\"medium\"\n        color=\"primary\"\n        variant=\"contained\"\n        type=\"submit\"\n        onClick={() => {\n          if (formik.values.address && !formik.values.shippingMethod) {\n            setShippingMethod(true);\n          }\n        }}\n        sx={{\n          display: \"block\",\n          m: \"24px auto\",\n        }}\n      >\n        {t(\"makeOrder\")}\n      </Button>\n    </Box>\n  );\n};\n\nexport default Form;\n\n// const paymentMethods = [\n//   {\n//     img: o,\n//     id: 1,\n//     txt: \"Oденьги\",\n//   },\n//   {\n//     img: megapay,\n//     id: 2,\n//     txt: \"MegaPay\",\n//   },\n//   {\n//     img: pay24,\n//     id: 3,\n//     txt: \"Pay24\",\n//   },\n//   {\n//     img: visa,\n//     id: 4,\n//     txt: \"Visa & Master Card\",\n//   },\n//   {\n//     img: optima,\n//     id: 5,\n//     txt: \"Optima24\",\n//   },\n//   {\n//     img: mbank,\n//     id: 6,\n//     txt: \"Mbank\",\n//   },\n//   {\n//     img: elkart,\n//     id: 7,\n//     txt: \"Элкарт\",\n//   },\n//   {\n//     img: c,\n//     id: 8,\n//     txt: \"Balance\",\n//   },\n// ];\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Dialog,\n  ListItem,\n  Typography,\n  useMediaQuery,\n} from \"@mui/material\";\nimport { Box, useTheme } from \"@mui/system\";\nimport Form from \"./Form\";\nimport Orders from \"./Orders\";\nimport { SuccessIcon } from \"../../../../assets/images/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setByNow } from \"../../../../redux/reducers/products\";\nimport SnackBar from \"../../../../components/SnackBar\";\nimport {\n  createOrder,\n  setCreatedOrderData,\n} from \"../../../../redux/reducers/order\";\nimport { Link } from \"react-router-dom\";\nimport { getClientList } from \"../../../../redux/reducers/profile\";\nimport RadioBtn from \"../../../../components/RadioBtn\";\n\nconst Order = ({\n  open,\n  setOpen,\n  orderSum,\n  count,\n  setCartSum,\n  loading,\n  sale,\n  t,\n  setLoading,\n  success,\n  setSuccess,\n}) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getClientList());\n  }, []);\n\n  const { byNow, cart_list } = useSelector(({ products }) => products);\n  const { created_order } = useSelector(({ order }) => order);\n\n  const { client_list } = useSelector(({ profile }) => profile);\n\n  const theme = useTheme();\n  const md = useMediaQuery(theme.breakpoints.down(768));\n\n  return (\n    <>\n      {/* <SuccessDialog\n        t={t}\n        open={success}\n        setOpenDialog={setOpen}\n        setOpen={setSuccess}\n      /> */}\n      {/* <SnackBar state={created_order} setState={setCreatedOrderData} /> */}\n      <Dialog\n        sx={{\n          \"& .MuiDialog-container\": {\n            alignItems: { xs: \"end\", md: \"center\" },\n          },\n          \"& .MuiDialog-paper\": {\n            minWidth: { xs: \"100%\", md: 848 },\n            height: { xs: \"100%\", md: \"fit-content\" },\n            m: { xs: \"0\", md: 3 },\n            maxHeight: { xs: \"calc(100% - 113px)\", md: \"calc(100% - 64px)\" },\n            p: 2,\n          },\n\n          \"& .MuiAccordion-root\": {\n            mt: 2,\n            width: \"100%\",\n            background: \"#FFFFFF\",\n            boxShadow: \"0px 4px 8px rgba(0, 0, 0, 0.15)\",\n            borderRadius: \"8px\",\n            \"&::before\": { display: \"none\" },\n          },\n\n          \"& .MuiAccordionSummary-content\": {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n          },\n        }}\n        onClose={() => {\n          if (byNow) dispatch(setByNow(false));\n          else setOpen(false);\n        }}\n        open={open || byNow}\n      >\n        <Box\n          sx={{\n            display: { xs: \"block\", md: \"none\" },\n            height: \"6px\",\n            width: 130,\n            borderRadius: 1,\n            background: \"#7E7E7E\",\n            m: \"0 auto 16px\",\n            color: \"transparent\",\n          }}\n        ></Box>\n        <Typography\n          variant=\"h6\"\n          mt={1}\n          textAlign=\"center\"\n          fontWeight=\"700\"\n          pb={{ xs: 2, md: 0 }}\n        >\n          Оформить заказ\n        </Typography>\n        {/* {md && <Orders t={t} />} */}\n        {/* <Typography\n          variant=\"body2\"\n          pt={2}\n          mt={{ xs: 1, md: 3 }}\n          borderTop=\"1px solid #00000010\"\n          fontWeight=\"700\"\n        >\n          ВЫБРАННЫЕ ТОВАРЫ\n        </Typography> */}\n        <Typography\n          variant=\"subtitle2\"\n          pt={2}\n          mt={{ xs: 1, md: 3 }}\n          borderTop=\"1px solid #00000010\"\n          mb={2}\n          fontWeight=\"700\"\n        >\n          Выберите пользователя\n        </Typography>\n\n        <Box>\n          {client_list?.results?.map((item) => (\n            <ListItem\n              onClick={() => setSuccess(item.id)}\n              disabled={!item.confirmation_status}\n              button\n              sx={{\n                padding: \"16px\",\n                borderRadius: \"8px\",\n                backgroundColor: \"#F5F6F8\",\n                mb: 2,\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n              }}\n            >\n              <Typography>{item.full_name}</Typography>\n              {!item.confirmation_status ? (\n                <Typography color=\"red\">Не подтвержден</Typography>\n              ) : (\n                <RadioBtn\n                  name=\"delivery_method\"\n                  id={item.id}\n                  handleChange={() => setSuccess(item.id)}\n                  value={success}\n                />\n              )}\n            </ListItem>\n          ))}\n        </Box>\n\n        <Button\n          size=\"medium\"\n          color=\"primary\"\n          variant=\"contained\"\n          disabled={!success}\n          type=\"submit\"\n          onClick={() => {\n            setLoading(true);\n            dispatch(\n              createOrder({\n                questionnaire_id: success,\n                products: cart_list?.map((item) => ({\n                  product_id: item.product_variations.id,\n                  product_count: item.product_count,\n                })),\n              })\n            );\n          }}\n          sx={{\n            display: \"block\",\n            m: \"24px auto\",\n          }}\n        >\n          {t(\"makeOrder\")}\n        </Button>\n\n        {/* <Box\n          component=\"table\"\n          sx={{\n            pb: 2,\n            mb: 2,\n            borderBottom: \"1px solid #00000010\",\n            width: \"100%\",\n            color: \"#00000050\",\n\n            \"& td:last-child\": {\n              textAlign: \"end\",\n            },\n\n            \"& p\": {\n              p: \"8px 0 0\",\n            },\n          }}\n        >\n          <tr>\n            <td>\n              <Typography variant=\"body2\" fontWeight=\"400\">\n                Товаров:\n              </Typography>\n            </td>\n            <td>\n              <Typography variant=\"body2\" fontWeight=\"400\">\n                {count}\n              </Typography>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <Typography variant=\"body2\" fontWeight=\"400\">\n                Скидка:\n              </Typography>\n            </td>\n            <td>\n              <Typography variant=\"body2\" fontWeight=\"400\">\n                {sale}\n              </Typography>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <Typography\n                variant=\"body2\"\n                color=\"var(--primary)\"\n                fontWeight=\"700\"\n              >\n                Итого цена:\n              </Typography>\n            </td>\n            <td>\n              <Typography\n                variant=\"body2\"\n                color=\"var(--primary)\"\n                fontWeight=\"700\"\n              >\n                {orderSum} c\n              </Typography>\n            </td>\n          </tr>\n        </Box> */}\n        {/* <Form\n          t={t}\n          setSuccess={setSuccess}\n          setCartSum={setCartSum}\n          setLoading={setLoading}\n        /> */}\n        {/* {!md && <Orders title t={t} />} */}\n      </Dialog>\n    </>\n  );\n};\n\nexport default Order;\n\nexport const SuccessDialog = ({ open, t, setOpen }) => {\n  const { created_order } = useSelector(({ order }) => order);\n  return (\n    <Dialog\n      sx={{\n        \"& .MuiPaper-root\": {\n          p: 2,\n        },\n      }}\n      onClose={() => setOpen(false)}\n      open={open}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <SuccessIcon />\n        <Typography\n          variant=\"subtitle2\"\n          fontWeight=\"700\"\n          textAlign=\"center\"\n          mt={2}\n          mb={1}\n        >\n          {t(\"successfullyOrdered\")}\n        </Typography>\n        <Typography\n          variant=\"body1\"\n          color=\"#15151570\"\n          textAlign=\"center\"\n          maxWidth=\"304px\"\n        >\n          {t(\"successfullyOrderedTxt\")}\n        </Typography>\n      </Box>\n\n      <Box\n        mt={2}\n        borderTop=\"1px solid #00000010\"\n        display=\"flex\"\n        pt={2}\n        justifyContent=\"space-between\"\n      >\n        {/* <a\n          aria-label=\"read more\"\n          style={{ width: \"100%\" }}\n          href={created_order?.message?.payment_url}\n        > */}\n        <Link\n          style={{ display: \"block\", margin: \"0 auto\" }}\n          to=\"/dashboard/profile/orders\"\n        >\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            // color=\"success\"\n            // onClick={() => {\n            //   setOpen(false);\n            // }}\n          >\n            <Typography variant=\"body2\" color=\"#151515\">\n              В заказы\n            </Typography>\n          </Button>\n        </Link>\n\n        {/* </a> */}\n\n        {/* <Button\n          fullWidth\n          onClick={() => {\n            setOpen(false);\n            setOpenDialog(false);\n            navigate(md ? \"/dashboard/profile\" : \"/dashboard/profile/orders\");\n          }}\n        >\n          <Typography variant=\"body2\" color=\"#E32967\">\n            В заказы\n          </Typography>\n        </Button> */}\n      </Box>\n    </Dialog>\n  );\n};\n"],"names":["setOpen","open","title","subtitle","product","handleRemoveProduct","exit","item","navigate","useNavigate","sx","p","onClose","icon","fontSize","color","variant","fontWeight","textAlign","mt","mb","borderTop","display","pt","justifyContent","fullWidth","onClick","t","localStorage","clear","cookie","path","setTimeout","window","location","reload","id","sum","value","handleChange","name","position","top","right","opacity","type","required","onChange","setSuccess","setLoading","buyNow","dispatch","setCartSum","useDispatch","useState","shippingMethod","setShippingMethod","cart_list","useSelector","products","created_order","order","formik","useFormik","initialValues","paymentMethod","delivery_method","country","city","address","ordering_item","onSubmit","values","from_stream","data","product_variations","product_count","count","createOrder","results","filter","total_products_sum","map","firstUpdate","useRef","useLayoutEffect","current","severity","setItem","message","order_id","fetch","method","headers","Accept","body","JSON","stringify","pg_order_id","b","then","response","json","console","log","shippingMethods","img","txt","link","component","boxShadow","borderRadius","borderColor","handleSubmit","textTransform","expanded","expandIcon","className","ml","mr","idx","button","background","alignItems","dangerouslySetInnerHTML","__html","lineHeight","size","m","orderSum","loading","sale","success","useEffect","getClientList","byNow","client_list","profile","theme","useTheme","useMediaQuery","breakpoints","down","Dialog","xs","md","minWidth","height","maxHeight","width","setByNow","pb","ListItem","disabled","confirmation_status","padding","backgroundColor","full_name","RadioBtn","Button","questionnaire_id","product_id","SuccessDialog","flexDirection","maxWidth","style","margin","to"],"sourceRoot":""}